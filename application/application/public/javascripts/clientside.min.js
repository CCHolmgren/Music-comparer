var tags=[],intersecting_tags,searchCount=0,first_color,second_color,follower_chart,listeners_chart,playcount_chart,popularity_chart,charts;
window.onload=function(){var a=0;initializeCharts();getLatestSearches();$("#table-button").on("click",function(b){b=$(this);$(b.data("target")).toggle();0==a%2?b.text("Show table"):b.text("Hide table");a+=1});$("#latestsearches").delegate("button","click",function(b){console.log(arguments);var a=$(this),d="#"+a.data("textbox");console.log(a.data("textbox"));console.log($(d)[0]);$(d)[0].value=decodeURI(a.data("query"))});navigator.onLine||$("#online").text("You are currently offline");console.log("Adding eventlistener");
    $("#compare").on("click",function(a){a.preventDefault();location.hash="#spacer";popularity_chart.segments=[];$("#tbody_data").empty();a=$("#query1");var c=$("#query2");""!=a.val()&&search(a.val(),"artist",handleData.bind(void 0,"#result",0),"#spinner1","#query1_loading");c&&search(c.val(),"artist",handleData.bind(void 0,"#result2",1),"#spinner2","#query2_loading")});$("input[type=text]").keypress(function(a){"13"==a.which&&$("#compare").trigger("click")})};
function addCommas(a){var b=(a+"").split(".");a=b[0];for(var b=1<b.length?"."+b[1]:"",c=/(\d+)(\d{3})/;c.test(a);)a=a.replace(c,"$1 $2");return a+b}function showSearchInfo(a,b,c){$(a).show();$(b).text("Searching for "+c)}function removeSearchInfo(a,b){$(a).hide();$(b).text("")}
function search(a,b,c,d,g){a=a.trim().toLowerCase();""!==a&&(localStorage.getItem(a)?(console.log("Got item from storage"),console.log(JSON.parse(localStorage.getItem(a))),c(JSON.parse(localStorage.getItem(a)),!0),console.log("Showing data"),$(".search-data").show()):(b=b||"artist",showSearchInfo(d,g,a),$.ajax({method:"post",url:"/api/search2",data:{query:a,type:b},error:function(a,b,c){console.log("The api errored out");removeSearchInfo(d,g);console.log(arguments);console.log(a);$("#loading").text(a.responseJSON.message)}}).done(function(b,
e,h){console.log(arguments);console.log(b);removeSearchInfo(d,g);localStorage.setItem(a,JSON.stringify(b));c(b,!1);console.log("Showing data");$(".search-data").show()})))}function putInSearchBox(a){console.log(arguments);a=decodeURI(a);$("#query1").val(a)}function putInSearchBox2(a){console.log(arguments);a=decodeURI(a);$("#query2").val(a)}
function getLatestSearches(){$.ajax({method:"GET",url:"/api/latestsearches"}).done(function(a){var b=$("#latestsearches");b.empty();a.forEach(function(a){var d=encodeURI(a);b.append("<div><span>"+a+"</span><div><button data-textbox='query1' data-query='"+d+"'>Box 1</button><button data-textbox='query2'  data-query='"+d+"'>Box 2</button></div>")});console.log(arguments)})}
function initializeCharts(){first_color=Please.make_color({base_color:"orangered",saturation:.9,value:.6});second_color=Please.make_color({base_color:"cyan",saturation:.9,value:.6});var a={labels:["Followers"],datasets:[{label:"Missing data",fillColor:first_color,data:[0]},{label:"Missing data",fillColor:second_color,data:[0]}]},b={labels:["Listeners"],datasets:[{label:"Missing data",fillColor:first_color,data:[0]},{label:"Missing data",fillColor:second_color,data:[0]}]},c={labels:["Playcount"],datasets:[{label:"Missing data",
    fillColor:first_color,data:[0]},{label:"Missing data",fillColor:second_color,data:[0]}]},d=follower_canvas.getContext("2d"),g=listeners_canvas.getContext("2d"),f=playcount_canvas.getContext("2d"),e=popularity_canvas.getContext("2d");follower_chart=(new Chart(d)).Bar(a);listeners_chart=(new Chart(g)).Bar(b);playcount_chart=(new Chart(f)).Bar(c);popularity_chart=(new Chart(e)).Doughnut();charts=[follower_chart,listeners_chart,playcount_chart,popularity_chart]}
function handleData(a,b,c,d){var g=[first_color,second_color],f=c.data[0].value||{followers:{total:0},popularity:0},e=c.data[1].value||{artist:{name:"",stats:{listeners:0,playcount:0}}};document.getElementById("follower_canvas");document.getElementById("listeners_canvas");document.getElementById("playcount_canvas");document.getElementById("popularity_canvas");$(a).html("<pre><code>"+JSON.stringify(c,void 0,2)+"</code></pre>");console.log("Target",a);console.log("Target: ",$(a));console.log("Arguments",
    arguments);console.log("Got data",c);console.log(b);console.log(follower_chart);$("#tbody_data").append("<tr><td>"+(e.artist.name||f.name)+"</td><td>"+addCommas(f.followers.total)+"</td><td>"+addCommas(e.artist.stats.playcount)+"</td><td>"+addCommas(e.artist.stats.listeners)+"</td><td>"+f.popularity+"</td><td>"+(e.artist.stats.playcount/f.followers.total).toFixed(1)+"</td><td>"+(e.artist.stats.playcount/e.artist.stats.listeners).toFixed(1)+"</td></tr>");console.log("Retrieved_from_cache: ",d);console.log("Adding stuff to ",
    h);var h=$("#query"+(b+1)+"_from");h.text("Retrieved "+e.artist.name+(d?" from the cache.":" from the server."));follower_chart.datasets[b].label=e.artist.name;follower_chart.datasets[b].bars[0].value=f.followers.total;listeners_chart.datasets[b].bars[0].value=e.artist.stats.listeners;playcount_chart.datasets[b].bars[0].value=e.artist.stats.playcount;$("#legend_location").html(follower_chart.generateLegend());popularity_chart.addData({value:f.popularity||0,color:g[b],highlight:Please.make_color({base_color:0===
b?"orangered":"cyan",saturation:.4,value:.6}),label:"Popularity"});charts.map(function(a){a.update()});$.get("/api/tags/"+e.artist.name).done(function(a){var c=$("#matchingtags");tags[b]=a.toptags.tag.map(function(a){return a.name});if(2==tags.length){intersecting_tags=tags[0].filter(function(a){return-1!=tags[1].indexOf(a)});console.log(intersecting_tags.toString());c.empty();c.html("<h6>These are the matching tags</h6>");a="<p>"+(intersecting_tags[0][0].toUpperCase()+intersecting_tags[0].slice(1)+
(1<intersecting_tags.length?", ":""));for(var d=1,e=intersecting_tags.length;d<e;d++)a+=intersecting_tags[d]+", ";c.append(a+"</p>");c.append("<p>A total of "+intersecting_tags.length+" of "+tags[b].length+" tags. Or ~"+(intersecting_tags.length/tags[b].length*100).toPrecision(2)+"%.</p>")}})};